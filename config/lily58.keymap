/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mmv {
    acceleration-exponent = <1>;      // 1
    time-to-max-speed-ms = <500>;     // 300
    delay-ms = <0>;                   // 0
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <40>;      // 300
    delay-ms = <0>;                   // 0
};

/ {
    behaviors {
        backspace_hold_tap: backspace_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <650>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        DeleteCombo {
            bindings = <&kp DELETE>;
            key-positions = <14 15 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESC       &kp N1  &kp N2  &kp N3    &kp N4  &kp N5                                                                                       &kp N6   &kp N7  &kp N8         &kp N9   &kp N0    &kp GRAVE
&kp TAB       &kp Q   &kp W   &kp E     &kp R   &kp T                                                                                        &kp Y    &kp U   &kp I          &kp O    &kp P     &kp MINUS
&kp LEFT_WIN  &kp A   &kp S   &kp D     &kp F   &kp G                                                                                        &kp H    &kp J   &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z   &kp X   &kp C     &kp V   &kp B   &kp LBKT                                    &kp RBKT                                 &kp N    &kp M   &kp COMMA      &kp DOT  &kp FSLH  &kp RSHFT
                              &kp LALT  &mo 3   &mo 1   &backspace_hold_tap LEFT_SHIFT BACKSPACE    &backspace_hold_tap RIGHT_CONTROL SPACE  &kp RET  &mo 2   &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Lower";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                       &trans     &trans          &trans          &trans           &trans  &trans
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                             &trans     &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans  &trans
&kp GRAVE   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                          &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans     &trans     &mkp MB4        &mkp MCLK       &mkp MB5         &trans  &trans
                                        &trans        &trans        &trans        &trans    &mkp LCLK  &mkp RCLK  &trans          &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Raise";
            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &trans       &trans     &trans        &trans     &trans    &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                     &kp N6       &kp N7     &kp N8        &kp N9     &kp N0    &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &kp LEFT     &kp DOWN   &kp UP_ARROW  &kp RIGHT  &trans    &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL     &kp LBKT   &kp RBKT  &kp BSLH
                           &trans   &trans   &trans   &trans    &trans  &trans       &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                        &kp K_PLAY_PAUSE  &kp KP_NUMLOCK   &trans           &trans           &kp KP_DIVIDE    &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &kp C_VOL_UP      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &kp C_VOL_DN      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SUBTRACT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp K_PREV  &kp K_NEXT        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS      &trans
                        &trans  &trans  &trans  &trans    &trans      &kp KP_NUMBER_0   &trans           &trans
            >;
        };
    };
};
